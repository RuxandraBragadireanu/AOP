{"version":3,"sources":["assets/candidate-icon.svg","assets/employee-icon.svg","store/profile/profile.actions.ts","styles/palette.ts","store/candidate/candidate.actions.ts","components/Login/Login.tsx","components/SignUp/SignUp.tsx","core/history.ts","components/WelcomePage/WelcomePage.tsx","store/interview/interview.actions.ts","components/CandidatePage/CandidatePage.tsx","components/CandidateInterviewDetails/CandidateInterviewDetails.tsx","components/Profile/Profile.tsx","core/private-route.tsx","Routes.tsx","components/InterviewsList/InterviewsList.tsx","components/CandidateInfo/CandidateInfo.tsx","components/ChangeInterviewScore/ChangeInterviewScore.tsx","components/NavBar/NavBar.tsx","serviceWorker.ts","store/profile/profile.reducer.ts","store/candidate/candidate.reducer.ts","store/interview/interview.reducer.ts","store/reducers.ts","styles/typography.ts","styles/material-theme.ts","store/candidate/candidate.saga.ts","store/profile/profile.saga.ts","store/interview/interview.saga.ts","store/sagas.ts","core/session.ts","index.tsx","core/singleton.ts"],"names":["module","exports","ProfileActionTypes","palette","ultraLight","light","medium_2","medium_1","dark","ultraDark","medium","product","supporting_2","supporting_1","primary","main","chartLight","chartMain","darkRed","CandidateActionTypes","ProfileActions","email","password","type","LOGIN_START","payload","username","LOGIN_SUCCESS","error","LOGIN_ERROR","LOGOUT_START","LOGOUT_SUCCESS","matchingPassword","REGISTER_START","REGISTER_SUCCESS","REGISTER_ERROR","LoginContainer","props","login","userName","console","log","setState","isTouched","changeEmail","event","target","value","changePassword","state","className","this","loading","LinearProgress","variant","onSubmit","preventDefault","style","alignSelf","marginLeft","textAlign","color","to","ApplicationRoutes","SIGN_UP","name","placeholder","margin","onChange","validators","errorMessages","width","Button","marginTop","badCredentials","React","connect","profile","dispatch","loginStart","SignUp","createAccount","changeMatchingPassword","ValidatorForm","addValidationRule","registerStart","createBrowserHistory","useStyles","makeStyles","theme","root","display","flexWrap","spacing","height","WelcomePage","classes","Paper","elevation","onClick","history","push","CANDIDATE_PAGE","Typography","src","candidateIcon","alt","LOGIN","employeeIcon","InterviewActionTypes","CandidateActions","GET_INTERVIEW_DETAILS_START","GET_INTERVIEW_DETAILS_SUCCESS","GET_INTERVIEW_DETAILS_ERROR","id","LOAD_CANDIDATE_INFO_START","LOAD_CANDIDATE_INFO_SUCCESS","LOAD_CANDIDATE_INFO_ERROR","CandidatePage","checkEmail","getInterviewDetails","candidate","getInterviewDetailsStart","interviewDetails","room","interviewer","interviewType","firstName","lastName","List","component","ListItem","ListItemText","Profile","logout","viewProfile","float","PrivateRoute","Component","authed","rest","render","InterviewActions","LOAD_INTERVIEWS_START","LOAD_INTERVIEWS_SUCCESS","LOAD_INTERVIEWS_ERROR","newScore","CHANGE_SCORE_START","CHANGE_SCORE_SUCCESS","CHANGE_SCORE_ERROR","Interviews","goToCandidateInfo","bind","goToChangeInterviewScore","loadInterviews","candidateId","CANDIDATE_INFO","interviewId","CHANGE_INTERVIEW_SCORE","interviews","TableContainer","Table","minWidth","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","interview","key","scope","cursor","padding","interviewerId","reservedRoom","moment","date","format","score","interviewsList","CandidateInfo","loadCandidateInfo","match","params","phone","ChangeInterviewScore","find","INTERVIEWS_LIST","marginBottom","FormControl","Select","labelId","ev","Array","from","keys","filter","e","index","MenuItem","changeInterviewScore","changeScore","Routes","path","ROOT","exact","strict","CANDIDATE_INTERVIEW_DETAILS","CandidateInterviewDetails","Login","PROFILE","InterviewsList","NavBarContainer","loginInfo","AccountCircle","AppBar","position","backgroundColor","Toolbar","justifyContent","Home","Boolean","window","location","hostname","initialState","combineReducers","action","typography","tabValue_300","fontFamily","fontSize","lineHeight","fontWeight","letterSpacing","tabValue_400","h4","h5","h5_500","h6","h6_400","subtitle1","subtitle2","body1","body2","button","caption","caption2","overline","overline2","textTransform","meta1","meta2","themeOptions","text","MuiButtonBase","disableRipple","overrides","MuiButton","contained","boxShadow","MuiTab","wrapper","alignItems","MuiTabs","borderBottom","indicator","top","MuiTableCell","head","MuiTableRow","borderTop","MuiTableHead","MuiChip","deletable","MuiInputBase","boxSizing","border","borderRadius","input","opacity","inputMultiline","fullWidth","multiline","MuiInputLabel","shrink","transform","MuiFormLabel","asterisk","MuiFormHelperText","MuiInput","formControl","MuiFormControl","marginNormal","MuiSelect","select","paddingRight","selectMenu","icon","MuiSwitch","switchBase","MuiTablePagination","textAlignLast","selectRoot","marginRight","MuiTypography","MuiListSubheader","MuiLinearProgress","colorPrimary","barColorPrimary","createMuiTheme","candidateSaga","setCandidateInterviewDetails","all","takeEvery","call","axios","get","data","delay","length","put","getInterviewDetailsError","lastInterview","candidateData","interviewerData","getInterviewDetailsSuccess","loadCandidateInfoSuccess","loadCandidateInfoError","profileSaga","register","post","defaults","headers","common","token","session","setSession","loginSuccess","getSession","loginError","registerSuccess","registerError","logOut","logoutSuccess","interviewSaga","loadInterviewsSuccess","loadInterviewsError","changeScoreSuccess","changeScoreError","rootSaga","targetConstructor","originalConstructor","instantiate","constructor","instance","args","newConstructor","prototype","Cookies","set","expires","jwt","base64","split","replace","JSON","parse","atob","getToken","remove","baseURL","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","logger","run","ReactDOM","NavBar","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ac450d62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/candidate-icon.71d3d328.svg\";","module.exports = __webpack_public_path__ + \"static/media/employee-icon.02d8e087.svg\";","export enum ProfileActionTypes {\n  LOGIN_START = \"[PROFILE]LOGIN_START\",\n  LOGIN_SUCCESS = \"[PROFILE]LOGIN_SUCCESS\",\n  LOGIN_ERROR = \"[PROFILE]LOGIN_ERROR\",\n  REGISTER_START = \"[PROFILE]REGISTER_START\",\n  REGISTER_SUCCESS = \"[PROFILE]REGISTER_SUCCESS\",\n  REGISTER_ERROR = \"[PROFILE]REGISTER_ERROR\",\n  LOGOUT_START = '[PROFILE]LOGOUT_START',\n  LOGOUT_SUCCESS = '[PROFILE]LOGOUT_SUCCESS',\n}\n\nexport class ProfileActions {\n  static loginStart(email: string, password: string) {\n    return {\n      type: ProfileActionTypes.LOGIN_START,\n      payload: {\n        username: email,\n        password\n      }\n    }\n  }\n\n  static loginSuccess(payload) {\n    return {\n      type: ProfileActionTypes.LOGIN_SUCCESS,\n      payload\n    }\n  }\n\n  static loginError(error) {\n    return {\n      type: ProfileActionTypes.LOGIN_ERROR,\n      error\n    }\n  }\n\n  static logout() {\n    return {\n      type: ProfileActionTypes.LOGOUT_START\n    }\n  }\n\n  static logoutSuccess() {\n    return {\n      type: ProfileActionTypes.LOGOUT_SUCCESS\n    }\n  }\n\n  static registerStart(email: string, password: string, matchingPassword: string) {\n    return {\n      type: ProfileActionTypes.REGISTER_START,\n      payload: {\n        email,\n        password,\n        matchingPassword\n      }\n    }\n  }\n\n  static registerSuccess(payload) {\n    return {\n      type: ProfileActionTypes.REGISTER_SUCCESS,\n      payload\n    }\n  }\n\n  static registerError(error) {\n    return {\n      type: ProfileActionTypes.REGISTER_ERROR,\n      error\n    }\n  }\n}","export const palette = {\n  autumnGrey: {\n    ultraLight: '#FAFAFA',\n    light: '#F1F1F1',\n    // disabled icon\n    medium_2: '#DADCDF',\n    // disabled text\n    medium_1: '#C2C2C2',\n    dark: '#ACACAC',\n    ultraDark: '#5E6C7A'\n  },\n\n  winterGrey: {\n    ultraLight: '#F9FAFB',\n    light: '#F6F7F9',\n    medium: '#D5DAE4',\n    product: '#BFCCDC',\n    supporting_2: '#A1B1C2',\n    supporting_1: '#6D7D87',\n    primary: '#172A40'\n  },\n\n  red: {\n    ultraLight: '#FEFAFA',\n    light: '#FBEFF0',\n    medium: '#ED6D7A',\n    main: '#F44336',\n    dark: '#BA0016'\n  },\n\n  yellow: {\n    ultraLight: '#FFFEF3',\n    light: '#FFF6DF',\n    main: '#F8D348',\n    medium: '#ECC535'\n  },\n\n  orange: {\n    ultraLight: '#FFFAF2',\n    light: '#FFDDAB',\n    main: '#FF9800',\n    medium: '#E29249',\n    dark: '#9E6633'\n  },\n\n  blue: {\n    ultraLight: '#F6FAFE',\n    light: '#E0EFFF',\n    medium: '#9FCBFF',\n    main: '#4990E2',\n    dark: '#316299',\n    chartLight: '#EAEEFF',\n    chartMain: '#383EFF'\n  },\n\n  green: {\n    ultraLight: '#F6FAF7',\n    light: '#DCEDE0',\n    line_item: '#A0D0AC',\n    campaign: '#8BBF86',\n    main: '#50A666',\n    medium: '#276838',\n    dark: '#144320'\n  },\n\n  purple: {\n    ultraLight: '#F8FAFC',\n    light: '#EFEBF5',\n    bidding: '#AD9ACB',\n    chartLight: '#F6EDFF',\n    chartMain: '#AE54FF'\n  },\n\n  blackEmphasis: {\n    30: 'rgba(0, 0, 0, 0.3)',\n    50: 'rgba(0, 0, 0, 0.5)',\n    70: 'rgba(0, 0, 0, 0.7)',\n    100: 'rgba(0, 0, 0, 1)'\n  },\n\n  whiteEmphasis: {\n    30: 'rgba(255, 255, 255, 0.3)',\n    50: 'rgba(255, 255, 255, 0.5)',\n    70: 'rgba(255, 255, 255, 0.7)',\n    100: 'rgba(255, 255, 255,  1)'\n  },\n\n  chartColors: [\n    '#03A9F4',\n    '#CDDC39',\n    '#C6419F',\n    '#4CAF50',\n    '#CE523A',\n    '#6A2FD3',\n    '#497FD5',\n    '#FF9800',\n    '#FBC33A',\n    '#42C8B8',\n    '#7E63A8'\n  ],\n\n  customColors: {\n    darkRed: '#443e3e'\n  }\n};\n","export enum CandidateActionTypes {\n  GET_INTERVIEW_DETAILS_START = \"[CANDIDATE]GET_INTERVIEW_DETAILS_START\",\n  GET_INTERVIEW_DETAILS_SUCCESS = \"[CANDIDATE]GET_INTERVIEW_DETAILS_SUCCESS\",\n  GET_INTERVIEW_DETAILS_ERROR = \"[CANDIDATE]GET_INTERVIEW_DETAILS_ERROR\",\n  LOAD_CANDIDATE_INFO_START = \"[CANDIDATE]LOAD_CANDIDATE_INFO_START\",\n  LOAD_CANDIDATE_INFO_SUCCESS = \"[CANDIDATE]LOAD_CANDIDATE_INFO_SUCCESS\",\n  LOAD_CANDIDATE_INFO_ERROR = \"[CANDIDATE]LOAD_CANDIDATE_INFO_ERROR\"\n}\n\nexport class CandidateActions {\n  static getInterviewDetailsStart(email: string) {\n    return {\n      type: CandidateActionTypes.GET_INTERVIEW_DETAILS_START,\n      payload: {\n        email\n      }\n    }\n  }\n\n  static getInterviewDetailsSuccess(payload) {\n    return {\n      type: CandidateActionTypes.GET_INTERVIEW_DETAILS_SUCCESS,\n      payload\n    }\n  }\n\n  static getInterviewDetailsError(error) {\n    return {\n      type: CandidateActionTypes.GET_INTERVIEW_DETAILS_ERROR,\n      error\n    }\n  }\n\n  static loadCandidateInfo(id: string) {\n    return {\n      type: CandidateActionTypes.LOAD_CANDIDATE_INFO_START,\n      payload: {\n        id\n      }\n    }\n  }\n\n  static loadCandidateInfoSuccess(payload) {\n    return {\n      type: CandidateActionTypes.LOAD_CANDIDATE_INFO_SUCCESS,\n      payload\n    }\n  }\n\n  static loadCandidateInfoError(error) {\n    return {\n      type: CandidateActionTypes.LOAD_CANDIDATE_INFO_ERROR,\n      error\n    }\n  }\n}","import * as React from 'react';\nimport {connect} from \"react-redux\";\nimport {Button, LinearProgress} from '@material-ui/core';\nimport AccesibilityIcon from '@material-ui/icons/AccessibilityOutlined';\nimport { ApplicationState } from '../../store/application-state';\nimport { Link } from \"react-router-dom\";\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport {ProfileActions} from \"../../store/profile/profile.actions\";\nimport {ApplicationRoutes} from \"../../Routes\";\n\ninterface LoginState {\n  email: string,\n  password: string,\n  isTouched: boolean;\n}\n\ninterface LoginProps {\n  login: (userName: string, password: string) => void;\n  loading: boolean;\n  badCredentials: boolean,\n}\n\nclass LoginContainer extends React.Component<LoginProps, LoginState> {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      isTouched: false\n    }\n  }\n\n  login = (userName: string, password: string) => {\n    console.log(`Logging user: ${userName} ...`);\n    this.setState({\n      isTouched: true\n    });\n    this.props.login(userName, password);\n  };\n  \n  changeEmail = (event: any) => {\n    this.setState({\n      email: event.target.value,\n      isTouched: false\n    })\n  };\n\n  changePassword = (event: any) => {\n    this.setState({\n      password: event.target.value,\n      isTouched: false\n    })\n  };\n\n  render() {\n    return(\n      <div className=\"centered-box-container\">\n        {this.props.loading && <LinearProgress variant=\"indeterminate\"/>}\n        <div className=\"padding-40\">\n          <ValidatorForm onSubmit={(event) => {\n                           event.preventDefault();\n                           return this.login(this.state.email, this.state.password);\n                         }}>\n            <div style={{alignSelf: 'center'}}>\n              <AccesibilityIcon style={{marginLeft: '48%'}}/>\n            </div>\n            <h1 style={{textAlign: 'center'}}>\n              Sign in\n            </h1>\n            <h3 style={{textAlign: 'center', color: 'gray'}}>\n              Or <Link to={ApplicationRoutes.SIGN_UP}><u><b>register</b></u></Link> if you don't have an account.\n            </h3>\n            <div>\n              <TextValidator\n                name=\"email\"\n                placeholder=\"Email\"\n                variant=\"outlined\"\n                value={this.state.email}\n                margin=\"normal\"\n                onChange={this.changeEmail}\n                className=\"width-100\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n              />\n            </div>\n            <div style={{width: '100%'}}>\n              <TextValidator\n                name=\"password\"\n                placeholder=\"Password\"\n                variant=\"outlined\"\n                value={this.state.password}\n                margin=\"normal\"\n                onChange={this.changePassword}\n                type=\"password\"\n                className=\"width-100\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n              />\n            </div>\n            <div>\n              <Button type=\"submit\"\n                      variant='contained'\n                      className=\"width-100\"\n                      style={{marginTop: 16}}>\n                Log in\n              </Button>\n            </div>\n            <div style={{marginTop: 20, textAlign: 'center'}}>\n              {this.props.badCredentials && this.state.isTouched && 'Wrong username or password.'}\n            </div>\n          </ValidatorForm>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state : ApplicationState) => {\n  return {\n    loading: state.profile.loading,\n    badCredentials: state.profile.error\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName: string, password: string) => dispatch(ProfileActions.loginStart(userName, password))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\n\n","import * as React from 'react';\nimport {connect} from \"react-redux\";\nimport {Button, LinearProgress} from '@material-ui/core';\nimport AccesibilityIcon from '@material-ui/icons/AccessibilityOutlined';\nimport {ApplicationState} from '../../store/application-state';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport {ProfileActions} from \"../../store/profile/profile.actions\";\n\ninterface SignUpState {\n  email: string,\n  password: string;\n  matchingPassword: string;\n}\n\ninterface SignUpProps {\n  createAccount: (email: string, password: string, matchingPassword: string) => void;\n  loading: boolean;\n  error: boolean;\n}\n\n\nclass SignUp extends React.Component<SignUpProps, SignUpState> {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      matchingPassword: ''\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n      return value === this.state.password;\n    });\n  }\n\n  createAccount = (email: string, password: string, matchingPassword: string) => {\n    this.props.createAccount(email, password, matchingPassword);\n  };\n\n  changeEmail = (event: any) => {\n    this.setState({\n      email: event.target.value\n    })\n  };\n\n  changePassword = (event: any) => {\n    this.setState({\n      password: event.target.value\n    })\n  };\n\n  changeMatchingPassword = (event: any) => {\n    this.setState({\n      matchingPassword: event.target.value\n    })\n  };\n\n  render() {\n    return(\n      <div className=\"centered-box-container\">\n        {this.props.loading && <LinearProgress variant=\"indeterminate\"/>}\n        <div className=\"padding-40\">\n          <ValidatorForm onSubmit={(event) => {\n            event.preventDefault();\n            const {email, password, matchingPassword} = this.state;\n            return this.createAccount(email, password, matchingPassword);\n          }} >\n            <div style={{alignSelf: 'center'}}>\n              <AccesibilityIcon style={{marginLeft: '48%'}}/>\n            </div>\n            <h3 style={{textAlign: 'center'}}>\n              Add your email to create an account!\n            </h3>\n\n            <div style={{width: '100%'}}>\n              <TextValidator\n                name=\"email\"\n                placeholder=\"Email\"\n                variant=\"outlined\"\n                value={this.state.email}\n                margin=\"normal\"\n                onChange={this.changeEmail}\n                className=\"width-100\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n              />\n            </div>\n\n            <div style={{width: '100%'}}>\n              <TextValidator\n                name=\"password\"\n                placeholder=\"Password\"\n                variant=\"outlined\"\n                value={this.state.password}\n                margin=\"normal\"\n                type=\"password\"\n                onChange={this.changePassword}\n                className=\"width-100\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n              />\n            </div>\n\n            <div style={{width: '100%'}}>\n              <TextValidator\n                name=\"matchingPassword\"\n                placeholder=\"Confirm password\"\n                variant=\"outlined\"\n                value={this.state.matchingPassword}\n                margin=\"normal\"\n                type=\"password\"\n                onChange={this.changeMatchingPassword}\n                className=\"width-100\"\n                validators={['isPasswordMatch']}\n                errorMessages={['Password does not match']}\n              />\n            </div>\n\n            <div >\n              <Button type=\"submit\"\n                      variant='contained'\n                      className=\"width-100\"\n                      style={{marginTop: 16}}>\n                Request account creation\n              </Button>\n            </div>\n\n            <div style={{marginTop: 20, textAlign: 'center'}}>{this.props.error && 'Whoops! Something went wrong!'}</div>\n          </ValidatorForm>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state : ApplicationState) => {\n  return {\n    loading: state.profile.loading,\n    error: state.profile.error\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createAccount: (email: string, password: string, matchingPassword: string) => {\n      dispatch(ProfileActions.registerStart(email, password, matchingPassword))\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport {Typography} from \"@material-ui/core\";\nimport candidateIcon from '../../assets/candidate-icon.svg';\nimport employeeIcon from '../../assets/employee-icon.svg';\nimport './WelcomePage.css';\nimport {palette} from \"../../styles/palette\";\nimport history from '../../core/history';\nimport {ApplicationRoutes} from \"../../Routes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: 'auto',\n    '& > *': {\n      margin: theme.spacing(12),\n      width: theme.spacing(100),\n      height: theme.spacing(100),\n    },\n  },\n}));\n\nexport function WelcomePage() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={3}\n             className=\"box\"\n             onClick={() => {history.push(ApplicationRoutes.CANDIDATE_PAGE)}}>\n        <div style={{margin: 'auto'}}>\n          <Typography variant={\"h5\"}\n                      style={{marginTop: 24, color: palette.autumnGrey.ultraDark, textAlign: 'center'}}>\n            Candidate\n          </Typography>\n          <img src={candidateIcon} alt=\"Candidate-icon\" className=\"box-icon\"/>\n        </div>\n      </Paper>\n      <Paper elevation={3}\n             className=\"box\"\n             onClick={() => {history.push(ApplicationRoutes.LOGIN)}}>\n        <div style={{margin: 'auto'}}>\n          <Typography variant={\"h5\"}\n                      style={{marginTop: 24, color: palette.autumnGrey.ultraDark, textAlign: 'center'}}>\n            Employee\n          </Typography>\n          <img src={employeeIcon} alt=\"Employee-icon\" className=\"box-icon\"/>\n        </div>\n      </Paper>\n    </div>\n  );\n}","export enum InterviewActionTypes {\n  LOAD_INTERVIEWS_START = \"[INTERVIEW]LOAD_INTERVIEWS_START\",\n  LOAD_INTERVIEWS_SUCCESS = \"[INTERVIEW]LOAD_INTERVIEWS_SUCCESS\",\n  LOAD_INTERVIEWS_ERROR = \"[INTERVIEW]LOAD_INTERVIEWS_ERROR\",\n  CHANGE_SCORE_START = \"[INTERVIEW]CHANGE_SCORE_START\",\n  CHANGE_SCORE_SUCCESS = \"[INTERVIEW]CHANGE_SCORE_SUCCESS\",\n  CHANGE_SCORE_ERROR = \"[INTERVIEW]CHANGE_SCORE_ERROR\",\n}\n\nexport class InterviewActions {\n  static loadInterviews() {\n    return {\n      type: InterviewActionTypes.LOAD_INTERVIEWS_START\n    }\n  }\n\n  static loadInterviewsSuccess(payload) {\n    return {\n      type: InterviewActionTypes.LOAD_INTERVIEWS_SUCCESS,\n      payload\n    }\n  }\n\n  static loadInterviewsError(error) {\n    return {\n      type: InterviewActionTypes.LOAD_INTERVIEWS_ERROR,\n      error\n    }\n  }\n\n  static changeScore(id: string, newScore: number) {\n    return {\n      type: InterviewActionTypes.CHANGE_SCORE_START,\n      payload: {\n        id,\n        newScore\n      }\n    }\n  }\n\n  static changeScoreSuccess() {\n    return {\n      type: InterviewActionTypes.CHANGE_SCORE_SUCCESS,\n    }\n  }\n\n  static changeScoreError(error) {\n    return {\n      type: InterviewActionTypes.CHANGE_SCORE_ERROR,\n      error\n    }\n  }\n\n}","import * as React from 'react';\nimport {connect} from \"react-redux\";\nimport {Button, LinearProgress} from '@material-ui/core';\nimport AccesibilityIcon from '@material-ui/icons/AccessibilityOutlined';\nimport {ApplicationState} from '../../store/application-state';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport {CandidateActions} from \"../../store/candidate/candidate.actions\";\n\ninterface CandidatePageState {\n  email: string,\n  isTouched: boolean;\n}\n\ninterface CandidatePageProps {\n  getInterviewDetails: (email: string) => void;\n  loading: boolean;\n  error: boolean;\n}\n\n\nclass CandidatePage extends React.Component<CandidatePageProps, CandidatePageState> {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      isTouched: false\n    };\n  }\n\n  checkEmail = (email: string) => {\n    console.log(`Checking email: ${email} ...`);\n    this.setState({\n      isTouched: true\n    });\n    this.props.getInterviewDetails(email);\n  };\n\n  changeEmail = (event: any) => {\n    this.setState({\n      email: event.target.value,\n      isTouched: false\n    })\n  };\n\n  render() {\n    return(\n      <div className=\"centered-box-container\">\n        {this.props.loading && <LinearProgress variant=\"indeterminate\"/>}\n        <div className=\"padding-40\">\n          <ValidatorForm onSubmit={(event) => {\n            event.preventDefault();\n            return this.checkEmail(this.state.email);\n          }} >\n            <div style={{alignSelf: 'center'}}>\n              <AccesibilityIcon style={{marginLeft: '48%'}}/>\n            </div>\n            <h3 style={{textAlign: 'center'}}>\n              Add your email to find out details about your interview!\n            </h3>\n\n            <div style={{width: '100%'}}>\n              <TextValidator\n                name=\"email\"\n                placeholder=\"Email\"\n                variant=\"outlined\"\n                value={this.state.email}\n                margin=\"normal\"\n                onChange={this.changeEmail}\n                className=\"width-100\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n              />\n            </div>\n\n            <div >\n              <Button type=\"submit\"\n                      variant='contained'\n                      className=\"width-100\"\n                      style={{marginTop: 16}}>\n                Get details\n              </Button>\n            </div>\n\n            <div style={{marginTop: 20, textAlign: 'center'}}>{this.props.error && this.state.isTouched && 'Whoops! You email was not found on our servers.'}</div>\n          </ValidatorForm>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state : ApplicationState) => {\n  return {\n    loading: state.candidate.loading,\n    error: state.candidate.error\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getInterviewDetails: (email: string) => dispatch(CandidateActions.getInterviewDetailsStart(email))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CandidatePage);\n\n","import * as React from 'react';\nimport {connect} from \"react-redux\";\nimport {ApplicationState, CandidateInterviewDetails} from '../../store/application-state';\nimport {List, ListItem, ListItemText} from \"@material-ui/core\";\nimport {ApplicationRoutes} from \"../../Routes\";\nimport history from \"../../core/history\";\n\ninterface CandidateInterviewProps {\n  interviewDetails: CandidateInterviewDetails\n}\n\nclass CandidatePage extends React.Component<CandidateInterviewProps, {}> {\n\n  constructor(props) {\n    super(props);\n    const {email} = this.props.interviewDetails;\n    if (!email) {\n      history.push(ApplicationRoutes.CANDIDATE_PAGE);\n    }\n  }\n\n  render() {\n    const {room, interviewer, interviewType, email, firstName, lastName} = this.props.interviewDetails;\n\n    return(\n      <div className=\"centered-box-container padding-40\" style={{textAlign: 'center'}}>\n        <h1>{firstName}'s interview:</h1>\n\n        <List component=\"nav\">\n          <ListItem>\n            <ListItemText primary={`First name: ${firstName}`} />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary={`Last name: ${lastName}`} />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary={`Email: ${email}`} />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary={`Room: ${room}`} />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary={`Interviewer: ${interviewer}`} />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary={`Interview Type: ${interviewType}`} />\n          </ListItem>\n        </List>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state : ApplicationState) => {\n  return {\n    interviewDetails: state.candidate\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CandidatePage);\n\n","import * as React from 'react';\nimport {connect} from \"react-redux\";\nimport {Button, List, ListItem, ListItemText} from '@material-ui/core';\nimport {ApplicationState} from '../../store/application-state';\nimport {ProfileActions} from \"../../store/profile/profile.actions\";\n\ninterface ProfileProps {\n  email: string;\n  firstName: string;\n  lastName: string;\n  logout: () => void;\n}\n\nclass Profile extends React.Component<ProfileProps, {}> {\n  logout() {\n    this.props.logout();\n  }\n\n  render() {\n    const {email, firstName, lastName} = this.props;\n\n    const viewProfile = (\n      <div style={{textAlign: 'center'}}>\n        <div onClick={() => this.logout()} style={{float: 'right',}}>\n          <Button type=\"submit\" variant='outlined'>Logout</Button>\n        </div>\n\n        <h1>{firstName}'s profile</h1>\n\n        <List component=\"nav\">\n          <ListItem>\n            <ListItemText primary={`First name: ${firstName}`} />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary={`Last name: ${lastName}`} />\n          </ListItem>\n          <ListItem>\n            <ListItemText primary={`Email: ${email}`} />\n          </ListItem>\n        </List>\n      </div>\n    );\n\n    return(\n      <div className=\"centered-box-container padding-40\">\n        <div className=\"login-container\">\n            {viewProfile}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state : ApplicationState) => {\n  return {\n    email: state.profile.email,\n    firstName: state.profile.firstName,\n    lastName: state.profile.lastName,\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => {\n      dispatch(ProfileActions.logout())\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, authed, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      authed\n        ? <Component {...props} />\n        : <Redirect to=\"/login\" />\n    )}\n  />\n);\n","import * as React from 'react';\nimport { Route } from \"react-router-dom\";\nimport Login from './components/Login/Login';\nimport SignUp from './components/SignUp/SignUp';\nimport { WelcomePage } from \"./components/WelcomePage/WelcomePage\";\nimport CandidatePage from \"./components/CandidatePage/CandidatePage\";\nimport CandidateInterviewDetails from \"./components/CandidateInterviewDetails/CandidateInterviewDetails\";\nimport Profile from \"./components/Profile/Profile\";\nimport {PrivateRoute} from \"./core/private-route\";\nimport {ApplicationState} from \"./store/application-state\";\nimport {connect} from \"react-redux\";\nimport InterviewsList from \"./components/InterviewsList/InterviewsList\";\nimport CandidateInfo from \"./components/CandidateInfo/CandidateInfo\";\nimport ChangeInterviewScore from \"./components/ChangeInterviewScore/ChangeInterviewScore\";\n\nexport enum ApplicationRoutes {\n  ROOT = '/',\n  CANDIDATE_PAGE = '/candidate-page',\n  CANDIDATE_INTERVIEW_DETAILS = '/candidate-interview-details',\n  LOGIN = '/login',\n  SIGN_UP = '/sign-up',\n  PROFILE = '/profile',\n  INTERVIEWS_LIST = '/interviews-list',\n  CANDIDATE_INFO = '/candidate-info',\n  CHANGE_INTERVIEW_SCORE = '/change-interview-score',\n}\n\nclass Routes extends React.Component<{authed?: boolean}, {}> {\n  render() {\n    const authed = this.props.authed;\n    return (\n      <div style={{height: 'calc(100% - 64px)', display: 'flex'}}>\n        <Route path={ApplicationRoutes.ROOT} exact strict component={WelcomePage}/>\n        <Route path={ApplicationRoutes.CANDIDATE_PAGE} exact strict component={CandidatePage}/>\n        <Route path={ApplicationRoutes.CANDIDATE_INTERVIEW_DETAILS} exact strict component={CandidateInterviewDetails}/>\n        <Route path={ApplicationRoutes.LOGIN} exact strict component={Login}/>\n        <Route path={ApplicationRoutes.SIGN_UP} exact strict component={SignUp}/>\n        <PrivateRoute path={ApplicationRoutes.PROFILE} authed={authed} exact strict component={Profile}/>\n        <PrivateRoute path={ApplicationRoutes.INTERVIEWS_LIST} authed={authed} exact strict component={InterviewsList}/>\n        <PrivateRoute path={ApplicationRoutes.CANDIDATE_INFO + '/:id'} authed={authed} exact strict component={CandidateInfo}/>\n        <PrivateRoute path={ApplicationRoutes.CHANGE_INTERVIEW_SCORE + '/:id'} authed={authed} exact strict component={ChangeInterviewScore}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  authed: state.profile.email !== ''\n});\n\nexport default connect(mapStateToProps, null)(Routes);","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {connect} from \"react-redux\";\nimport {ApplicationState, Interview} from \"../../store/application-state\";\nimport {Dispatch} from \"redux\";\nimport {InterviewActions} from \"../../store/interview/interview.actions\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport moment from 'moment/moment';\nimport {ApplicationRoutes} from \"../../Routes\";\nimport history from \"../../core/history\";\n\ninterface InterviewsListProps {\n  loadInterviews: () => void;\n  interviews: Array<Interview>;\n  loading: boolean;\n  error: any;\n}\n\nclass Interviews extends React.Component<InterviewsListProps, {}> {\n\n  constructor(props) {\n    super(props);\n\n    this.goToCandidateInfo = this.goToCandidateInfo.bind(this);\n    this.goToChangeInterviewScore = this.goToChangeInterviewScore.bind(this);\n  }\n\n\n  componentDidMount(): void {\n    this.props.loadInterviews();\n  }\n\n  goToCandidateInfo(candidateId: number) {\n    history.push(`${ApplicationRoutes.CANDIDATE_INFO}/${candidateId}`);\n  }\n\n  goToChangeInterviewScore(interviewId: number) {\n    history.push(`${ApplicationRoutes.CHANGE_INTERVIEW_SCORE}/${interviewId}`);\n  }\n\n  render () {\n    const {interviews, loading} = this.props;\n\n    return (\n      <div>\n        <div className=\"padding-40\">\n          <TableContainer component={Paper}>\n            {loading && <LinearProgress variant=\"indeterminate\"/>}\n            <Table style={{minWidth: '95vw'}} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell><span style={{marginLeft: 16}}>Id</span></TableCell>\n                  <TableCell align=\"left\"><span style={{marginLeft: 16}}>Candidate</span></TableCell>\n                  <TableCell align=\"left\">Interviewer</TableCell>\n                  <TableCell align=\"left\">Type</TableCell>\n                  <TableCell align=\"left\">Room</TableCell>\n                  <TableCell align=\"left\">Date</TableCell>\n                  <TableCell align=\"left\">Score</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {interviews.map((interview) => (\n                  <TableRow key={interview.id}>\n                    <TableCell component=\"th\"\n                               scope=\"row\"\n                               onClick={() => {\n                                 this.goToChangeInterviewScore(interview.id)\n                               }}>\n                      <span style={{cursor: 'pointer', padding: 16}}>{interview.id}</span>\n                    </TableCell>\n                    <TableCell align=\"left\"\n                               onClick={() => {this.goToCandidateInfo(interview.candidateId)}}>\n                      <span style={{cursor: 'pointer', padding: 16}}>{interview.candidateId}</span>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {interview.interviewerId}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {interview.type}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {interview.reservedRoom}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {moment(interview.date).format('DD MMM YYYY HH:mm')}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {interview.score}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: ApplicationState) => {\n  return {\n    interviews: state.interviews.interviewsList,\n    loading: state.interviews.loading,\n    error: state.interviews.error\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    loadInterviews: () => {\n      dispatch(InterviewActions.loadInterviews());\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Interviews);","import * as React from 'react';\nimport {connect} from \"react-redux\";\nimport {ApplicationState, CandidateInterviewDetails} from '../../store/application-state';\nimport {LinearProgress, List, ListItem, ListItemText} from \"@material-ui/core\";\nimport {CandidateActions} from \"../../store/candidate/candidate.actions\";\n\ninterface CandidateInterviewProps {\n  candidate: CandidateInterviewDetails;\n  loadCandidateInfo: (id: string) => void;\n  match: {\n    params: {\n      id: string;\n    }\n  }\n}\n\nclass CandidateInfo extends React.Component<CandidateInterviewProps, {}> {\n\n  componentDidMount(): void {\n    this.props.loadCandidateInfo(this.props.match.params.id);\n  }\n\n  render() {\n    const {email, lastName, firstName, loading, phone} = this.props.candidate;\n\n    return (\n      <div className=\"centered-box-container\">\n        {loading && <LinearProgress variant=\"indeterminate\"/>}\n        {!loading && (\n          <div className=\"padding-40\">\n            <div className=\"login-container\">\n              <div style={{textAlign: 'center'}}>\n                <h1>{firstName}'s profile</h1>\n\n                <List component=\"nav\">\n                  <ListItem>\n                    <ListItemText primary={`First name: ${firstName}`} />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary={`Last name: ${lastName}`} />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary={`Email: ${email}`} />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary={`Phone: ${phone}`} />\n                  </ListItem>\n                </List>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state : ApplicationState) => {\n  return {\n    candidate: state.candidate\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadCandidateInfo: (id: string) => {\n      dispatch(CandidateActions.loadCandidateInfo(id))\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CandidateInfo);\n\n","import * as React from 'react';\nimport {connect} from \"react-redux\";\nimport {ApplicationState, Interview} from '../../store/application-state';\nimport {\n  Button,\n  FormControl,\n  LinearProgress,\n  ListItem,\n  ListItemText,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport {InterviewActions} from \"../../store/interview/interview.actions\";\nimport {ApplicationRoutes} from \"../../Routes\";\nimport history from \"../../core/history\";\n\ninterface ChangeInterviewScoreProps {\n  interviews: Array<Interview>;\n  changeInterviewScore: (id: string, newScore: number) => void;\n  loading: boolean;\n  match: {\n    params: {\n      id: string;\n    }\n  }\n}\n\ninterface ChangeInterviewScoreState {\n  newScore: number | any;\n  interview: Interview | any;\n}\n\nclass ChangeInterviewScore extends React.Component<ChangeInterviewScoreProps, ChangeInterviewScoreState> {\n\n  constructor(props) {\n    super(props);\n    const interviewId = this.props.match.params.id;\n\n    const interview = this.props.interviews\n      .find(interview => `${interview.id}` === `${interviewId}`);\n\n    if (!interview) {\n      history.push(ApplicationRoutes.INTERVIEWS_LIST);\n    }\n\n    this.state = {\n      newScore: interview && interview.score,\n      interview: interview || null\n    }\n  }\n\n\n  render() {\n    const {interview, newScore} = this.state;\n\n    return interview && (\n      <div className=\"centered-box-container\">\n        {this.props.loading && <LinearProgress variant=\"indeterminate\"/>}\n        <div className=\"padding-40\">\n          <ListItem>\n            <ListItemText primary={`New score: `} style={{marginBottom: 24}}/>\n            <FormControl>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={newScore}\n                onChange={(ev) => {\n                  this.setState({\n                    newScore: ev.target.value\n                  })\n                }}>\n                {\n                  Array.from(Array(11).keys())\n                       .filter(e => e > 0)\n                       .map(index => {\n                            return <MenuItem value={index} key={'menu-item-'+index}>{index}</MenuItem>\n                          })\n                }\n              </Select>\n            </FormControl>\n          </ListItem>\n\n          <Button onClick={() => {\n                    this.props.changeInterviewScore(\n                      this.state.interview.id,\n                      this.state.newScore\n                    );\n                  }}\n                  variant=\"contained\"\n                  style={{float: 'right', marginBottom: 24}}>\n            Save changes\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state : ApplicationState) => {\n  return {\n    interviews: state.interviews.interviewsList,\n    loading: state.interviews.loading\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeInterviewScore: (id: string, newScore: number) => {\n      dispatch(InterviewActions.changeScore(id, newScore))\n    },\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeInterviewScore);\n\n","import * as React from 'react';\nimport '../../styles/style.css';\nimport {connect} from 'react-redux';\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\nimport {AccountCircle, Home} from '@material-ui/icons';\nimport {ApplicationState} from '../../store/application-state';\nimport {palette} from \"../../styles/palette\";\nimport {ApplicationRoutes} from \"../../Routes\";\n\ninterface NavBarProps{\n  email: string,\n  firstName: string;\n}\n\nclass NavBarContainer extends React.Component<NavBarProps, {}> {\n  render() {\n    const {email, firstName} = this.props;\n    const loginInfo = email ? `Hello, ${firstName}` : <AccountCircle/>;\n\n    return(\n      <React.Fragment>\n        <AppBar position=\"static\" style={{backgroundColor: palette.customColors.darkRed}}>\n          <Toolbar>\n            <Link to={email !== '' ? ApplicationRoutes.INTERVIEWS_LIST : ApplicationRoutes.ROOT}\n                  style={{width: '5%', display: 'flex', justifyContent: 'center'}}>\n              <Home style={{ color: 'white' }}/>\n            </Link>\n            <Typography variant=\"h6\" style={{width: '90%', display: 'flex', justifyContent: 'center'}}>\n              <Link to={email !== '' ? ApplicationRoutes.INTERVIEWS_LIST : ApplicationRoutes.ROOT}\n                    style={{color: 'white'}}>\n                Front Desk\n              </Link>\n            </Typography>\n            <Link to={email !== '' ? ApplicationRoutes.PROFILE : ApplicationRoutes.LOGIN}\n                  style={{width: '10%', display: 'flex', justifyContent: 'center', color: 'white'}}>\n              {loginInfo}\n            </Link>\n          </Toolbar>\n        </AppBar>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state : ApplicationState) => {\n  return {\n    email: state.profile.email,\n    firstName: state.profile.firstName,\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBarContainer);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ProfileState} from \"../application-state\";\nimport {ProfileActionTypes} from \"./profile.actions\";\n\nconst initialState: ProfileState = {\n  email: '',\n  firstName: '',\n  lastName: '',\n  loading: false,\n  error: null,\n};\n\nexport function profileReducer(state = initialState, action: any) {\n  switch(action.type) {\n    case ProfileActionTypes.LOGIN_START: {\n      return {...state, ...{loading: true, error: null}};\n    }\n    case ProfileActionTypes.LOGIN_SUCCESS: {\n      return {...state, ...{loading: false, error: null}, ...action.payload};\n    }\n    case ProfileActionTypes.LOGIN_ERROR: {\n      return {...state, ...{loading: false}, ...{error: action.error}};\n    }\n    case ProfileActionTypes.LOGOUT_START: {\n      return {...state, ...{loading: true, error: null}};\n    }\n    case ProfileActionTypes.LOGOUT_SUCCESS: {\n      return {...state, ...initialState, error: null};\n    }\n    case ProfileActionTypes.REGISTER_START: {\n      return {...state, ...{loading: true, error: null}};\n    }\n    case ProfileActionTypes.REGISTER_SUCCESS: {\n      return {...state, ...{loading: false, error: null}};\n    }\n    case ProfileActionTypes.REGISTER_ERROR: {\n      return {...state, ...{loading: false}, ...{error: action.error}};\n    }\n    default:\n      return state;\n  }\n}","import {CandidateInterviewDetails} from \"../application-state\";\nimport {CandidateActionTypes} from \"./candidate.actions\";\n\nconst initialState: CandidateInterviewDetails = {\n  interviewer: '',\n  interviewType: '',\n  room: '',\n  email: '',\n  phone: '',\n  firstName: '',\n  lastName: '',\n  loading: false,\n  error: null,\n};\n\nexport function candidateReducer(state = initialState, action: any) {\n  switch (action.type) {\n    case CandidateActionTypes.GET_INTERVIEW_DETAILS_START: {\n      return {...state, ...{loading: true}};\n    }\n    case CandidateActionTypes.GET_INTERVIEW_DETAILS_SUCCESS: {\n      return {...state, ...{loading: false}, ...action.payload};\n    }\n    case CandidateActionTypes.GET_INTERVIEW_DETAILS_ERROR: {\n      return {...state, ...{loading: false}, ...{error: action.error}};\n    }\n    case CandidateActionTypes.LOAD_CANDIDATE_INFO_START: {\n      return {...state, ...{loading: true}};\n    }\n    case CandidateActionTypes.LOAD_CANDIDATE_INFO_SUCCESS: {\n      return {...state, ...{loading: false}, ...action.payload};\n    }\n    case CandidateActionTypes.LOAD_CANDIDATE_INFO_ERROR: {\n      return {...state, ...{loading: false}, ...{error: action.error}};\n    }\n    default:\n      return state\n  }\n}","import {InterviewsState} from \"../application-state\";\nimport {InterviewActionTypes} from \"./interview.actions\";\n\nconst initialState: InterviewsState = {\n  interviewsList: [],\n  loading: false,\n  error: null\n};\n\nexport function interviewReducer(state = initialState, action: any) {\n  switch (action.type) {\n    case InterviewActionTypes.LOAD_INTERVIEWS_START: {\n      return {...state, ...{loading: true}}\n    }\n    case InterviewActionTypes.LOAD_INTERVIEWS_SUCCESS: {\n      return {...state, ...{loading: false, interviewsList: action.payload}}\n    }\n    case InterviewActionTypes.LOAD_INTERVIEWS_ERROR: {\n      return {...state, ...{loading: false}, ...action.error}\n    }\n    case InterviewActionTypes.CHANGE_SCORE_START: {\n      return {...state, ...{loading: true}}\n    }\n    case InterviewActionTypes.CHANGE_SCORE_SUCCESS: {\n      return {...state, ...{loading: false}}\n    }\n    case InterviewActionTypes.CHANGE_SCORE_ERROR: {\n      return {...state, ...{loading: false}, ...action.error}\n    }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { profileReducer } from './profile/profile.reducer';\nimport {candidateReducer} from \"./candidate/candidate.reducer\";\nimport {interviewReducer} from \"./interview/interview.reducer\";\n\nexport default combineReducers({\n  profile: profileReducer,\n  candidate: candidateReducer,\n  interviews: interviewReducer\n});","export const typography = {\n  //custom typography element (WARNING!! - use only for dashboard tab)\n  tabValue_300: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: '1.625rem',\n    lineHeight: '1.5em',\n    fontWeight: 300,\n    letterSpacing: \"0em\"\n  },\n  //custom typography element (WARNING!! - use only for dashboard tab)\n  tabValue_400: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: '1.625rem',\n    lineHeight: '1.5em',\n    fontWeight: 400,\n    letterSpacing: \"0em\"\n  },\n  h4: {\n    fontSize: '2.125rem',\n    lineHeight: '1.1764em',\n  },\n  h5: {\n    fontSize: '1.5rem',\n    lineHeight: '1.3333em',\n  },\n  //custom typography element\n  h5_500: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: '1.5rem',\n    lineHeight: '1.3333em',\n    fontWeight: 500,\n    letterSpacing: \"0em\"\n  },\n  h6: {\n    fontSize: '1.3125rem',\n    lineHeight: '1.4em',\n  },\n  //custom typography element\n  h6_400: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: 400,\n    fontSize: '1.3125rem',\n    lineHeight: '1.4em',\n    letterSpacing: \"0.0075em\"\n  },\n  subtitle1: {\n    fontSize: '1rem',\n    lineHeight: '1.375em',\n  },\n  subtitle2: {\n    fontWeight: 500,\n    fontSize: '1rem',\n    lineHeight: '1.375em',\n  },\n  body1: {\n    fontSize: '0.875rem',\n    lineHeight: '1.2857em',\n  },\n  body2: {\n    fontSize: '0.875rem',\n    lineHeight: '1.3571em',\n  },\n  button: {\n    fontSize: '0.875rem',\n    lineHeight: '1.5em',\n  },\n  caption: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: 400,\n    fontSize: '0.75rem',\n    lineHeight: '1.1667em',\n  },\n  //custom typography element\n  caption2: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: '0.75rem',\n    lineHeight: '1.25em',\n    fontWeight: 500,\n    letterSpacing: \"0.03333em\"\n  },\n  overline:{\n    fontSize: '0.75rem',\n    lineHeight: '1.75em',\n  },\n  //custom typography element\n  overline2: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: 400,\n    fontSize: '0.75rem',\n    lineHeight: '1.75em',\n    letterSpacing: \"0em\",\n    textTransform: \"uppercase\"\n  },\n  //custom typography element\n  meta1: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: 400,\n    fontSize: '0.625rem',\n    lineHeight: '1.5em',\n    letterSpacing: \"0em\"\n  },\n  //custom typography element\n  meta2: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: 500,\n    fontSize: '0.625rem',\n    lineHeight: '1.5em',\n    letterSpacing: \"0em\"\n  }\n};","import { createMuiTheme } from '@material-ui/core';\nimport { palette } from './palette';\nimport { typography } from './typography';\nimport {ThemeOptions} from '@material-ui/core/styles/createMuiTheme';\n\nexport const themeOptions: ThemeOptions = {\n  palette: {\n    primary: {\n      main: palette.blue.main,\n    },\n    error: {\n      main: palette.red.main\n    },\n    text: {\n      primary: palette.winterGrey.primary\n    }\n  },\n  spacing: 4,\n  typography: (typography as any),\n  props: {\n    MuiButtonBase: {\n      disableRipple: true\n    }\n  },\n  overrides: {\n    MuiButton: {\n      contained: {\n        boxShadow: 'none',\n        '&:active': {\n          boxShadow: 'none'\n        }\n      },\n      root: {\n        height: 40\n      }\n    },\n    MuiTab: {\n      root: {\n        textTransform: 'initial'\n      },\n      wrapper: {\n        alignItems: 'normal'\n      }\n    },\n    MuiTabs: {\n      root: {\n        borderBottom: `2px solid ${palette.winterGrey.light}`\n      },\n      indicator: {\n        top: 0,\n        height: 4\n      }\n    },\n    MuiTableCell: {\n      // should be similar to body2\n      head: {\n        fontSize: '0.875rem',\n        lineHeight: '1.3571em',\n        fontWeight: 500,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        color: palette.winterGrey.primary,\n        backgroundColor: `${palette.autumnGrey.light} !important`\n      },\n      root: {\n        padding: '4px 24px'\n      }\n    },\n    MuiTableRow: {\n      root: {\n        borderTop: `1px solid ${palette.autumnGrey.medium_2}`,\n        '&$selected': {\n          backgroundColor: 'white'\n        },\n        '&:hover': {\n          backgroundColor: palette.autumnGrey.ultraLight\n        },\n        height: 48\n      },\n      head: {\n        '&:hover': {\n          backgroundColor: palette.autumnGrey.light\n        },\n        height: 56\n      }\n    },\n    MuiTableHead: {\n      root: {\n        borderTop: `1px solid ${palette.autumnGrey.medium_2}`,\n        backgroundColor: palette.autumnGrey.light,\n      }\n    },\n    MuiChip: {\n      root: {\n        backgroundColor: palette.winterGrey.light,\n        color: palette.winterGrey.primary\n      },\n      deletable: {\n        '&:focus': {\n          backgroundColor: palette.winterGrey.light,\n          color: palette.winterGrey.primary\n        }\n      }\n    },\n    MuiInputBase: {\n      root: {\n        boxSizing: 'unset',\n        border: `1px solid ${palette.winterGrey.medium}`,\n        borderRadius: 2,\n        color: palette.winterGrey.primary,\n        height: 40,\n        cursor: 'default',\n        ...typography.body1,\n        '&$error': {\n          border: `1px solid ${palette.red.main}`,\n          '&>input': {\n            '&::placeholder': {\n              color: palette.red.main\n            }\n          }\n        }\n      },\n      input: {\n        padding: '0 8px',\n        '&::placeholder': {\n          color: palette.winterGrey.supporting_2,\n          ...typography.caption,\n          opacity: 1\n        },\n        ...typography.body1\n      },\n      inputMultiline: {\n        '&::placeholder': {\n          color: palette.winterGrey.supporting_2,\n          ...typography.caption,\n          lineHeight: '18px',\n          opacity: 1,\n        },\n      },\n      fullWidth: {\n        width: 'calc(100% - 10px)'\n      },\n      multiline: {\n        padding: '6.5px 8px',\n        height: 'auto'\n      }\n    },\n    MuiInputLabel: {\n      shrink: {\n        transform: 'translate(0, 1.5px) scale(1)'\n      }\n    },\n    MuiFormLabel: {\n      root: {\n        '&$error': {\n          color: palette.winterGrey.primary,\n        },\n        marginBottom: 4,\n        ...typography.caption\n      },\n      asterisk: {\n        '&$error': {\n          color: palette.winterGrey.primary,\n        },\n      }\n    },\n    MuiFormHelperText: {\n      root: {\n        '&$error': {\n          color: palette.red.main,\n          marginTop: 30,\n          marginLeft: 0,\n        },\n        position: 'absolute',\n        top: 'calc(100% - 24px)',\n        marginTop: 2,\n        ...typography.caption\n      }\n    },\n    MuiInput: {\n      formControl: {\n        marginBottom: 24,\n        'label + &': {\n          marginTop: 18\n        }\n      },\n    },\n    MuiFormControl: {\n      marginNormal: {\n        marginBottom: 20\n      }\n    },\n    MuiSelect: {\n      root: {\n        height: 30,\n        backgroundColor: palette.winterGrey.light,\n      },\n      select: {\n        paddingRight: 8,\n        '&:focus': {\n          backgroundColor: palette.winterGrey.light\n        }\n      },\n      selectMenu: {\n        width: 'calc(100% - 16px)',\n        height: '100%',\n        lineHeight: '30px',\n        paddingRight: 28\n      },\n      icon: {\n        paddingRight: 4\n      }\n    },\n    MuiSwitch: {\n      switchBase: {\n        height: 'auto'\n      }\n    },\n    MuiTablePagination: {\n      input: {\n        margin: '0 4px'\n      },\n      select: {\n        textAlign: 'left',\n        textAlignLast: 'left'\n\n      },\n      selectRoot: {\n        marginLeft: 0,\n        marginRight: 0,\n        width: 100\n      }\n    },\n    MuiTypography: {\n      root: {\n        display: 'block',\n        color: palette.winterGrey.primary\n      }\n    },\n    MuiListSubheader: {\n      root: {\n        fontSize: '0.75rem',\n        fontWeight: 400,\n        color: palette.winterGrey.supporting_2,\n      }\n    },\n    MuiLinearProgress: {\n      colorPrimary: {\n        backgroundColor: palette.autumnGrey.light\n      },\n      barColorPrimary: {\n        backgroundColor: palette.customColors.darkRed\n      }\n    }\n  }\n};\n\nexport const theme = createMuiTheme(themeOptions);","import {CandidateActions, CandidateActionTypes} from \"./candidate.actions\";\nimport {all, takeEvery, put, call, delay} from \"redux-saga/effects\";\nimport {ApplicationRoutes} from \"../../Routes\";\nimport history from \"../../core/history\";\nimport axios from \"axios\";\n\nexport function* candidateSaga() {\n  yield all([\n    takeEvery(CandidateActionTypes.GET_INTERVIEW_DETAILS_START, setCandidateInterviewDetails),\n    takeEvery(CandidateActionTypes.LOAD_CANDIDATE_INFO_START, loadCandidateInfo)\n  ])\n}\n\nfunction* setCandidateInterviewDetails(action) {\n  try {\n    const {data} = yield call(axios.get, `/interview/email/?email=${action.payload.email}`);\n    yield delay(1000);\n\n    if (data.length === 0) {\n      yield put(CandidateActions.getInterviewDetailsError('No data found!'));\n    } else {\n      const lastInterview = data[data.length - 1];\n      const {data: candidateData} = yield call(axios.get, `/candidate/${lastInterview.candidateId}`);\n      const {data: interviewerData} = yield call(axios.get, `/interviewer/getInterviewer/${lastInterview.interviewerId}`);\n\n      const interviewDetails = {\n        room: lastInterview.reservedRoom || '',\n        interviewType: lastInterview.type || '',\n        interviewer: (interviewerData.firstName || '') + ' ' + (interviewerData.lastName || ''),\n        email: candidateData.email || '',\n        firstName: candidateData.firstName || '',\n        lastName: candidateData.lastName || ''\n      };\n      yield put(CandidateActions.getInterviewDetailsSuccess(interviewDetails));\n      history.push(ApplicationRoutes.CANDIDATE_INTERVIEW_DETAILS);\n    }\n  } catch (error) {\n    yield put(CandidateActions.getInterviewDetailsError(error));\n  }\n}\n\nfunction* loadCandidateInfo(action) {\n  try {\n    const {data} = yield call(axios.get, `/candidate/${action.payload.id}`);\n    yield delay(1000);\n    yield put(CandidateActions.loadCandidateInfoSuccess(data));\n  } catch (error) {\n    yield put(CandidateActions.loadCandidateInfoError(error));\n  }\n}","import {all, call, delay, put, takeEvery} from \"redux-saga/effects\";\nimport {ProfileActions, ProfileActionTypes} from \"./profile.actions\";\nimport history from \"../../core/history\";\nimport {ApplicationRoutes} from \"../../Routes\";\nimport axios from 'axios';\nimport { session } from '../../index';\n\nexport function* profileSaga() {\n  yield all([\n    takeEvery(ProfileActionTypes.LOGIN_START, login),\n    takeEvery(ProfileActionTypes.REGISTER_START, register),\n    takeEvery(ProfileActionTypes.LOGOUT_START, logout),\n  ])\n}\n\nfunction* login(action) {\n  try {\n    const {data} = yield call(axios.post, `/authenticate`, action.payload);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\n\n    session.setSession(data.token);\n    yield put(ProfileActions.loginSuccess(session.getSession()));\n    history.push(ApplicationRoutes.INTERVIEWS_LIST);\n  } catch (error) {\n    yield put(ProfileActions.loginError(error));\n  }\n}\n\nfunction* register(action) {\n  try {\n    yield delay(1000);\n    yield call(axios.post, `/register`, action.payload);\n\n    yield put(ProfileActions.registerSuccess({}));\n    history.push(ApplicationRoutes.LOGIN);\n  } catch(error) {\n    yield put(ProfileActions.registerError(error));\n  }\n}\n\nfunction* logout() {\n  session.logOut();\n  yield put(ProfileActions.logoutSuccess());\n  history.push(ApplicationRoutes.LOGIN);\n}","import {all, call, delay, put, takeEvery} from \"redux-saga/effects\";\nimport {InterviewActions, InterviewActionTypes} from \"./interview.actions\";\nimport axios from 'axios';\nimport history from \"../../core/history\";\nimport {ApplicationRoutes} from \"../../Routes\";\n\nexport function* interviewSaga() {\n  yield all([\n    takeEvery(InterviewActionTypes.LOAD_INTERVIEWS_START, loadInterviews),\n    takeEvery(InterviewActionTypes.CHANGE_SCORE_START, changeScore)\n  ])\n}\n\nfunction* loadInterviews() {\n  try {\n    const {data} = yield call(axios.get, '/interview');\n    yield delay(1000);\n\n    yield put(InterviewActions.loadInterviewsSuccess(data));\n  } catch (error) {\n    yield put(InterviewActions.loadInterviewsError(error));\n  }\n}\n\nfunction* changeScore(action) {\n  try {\n    yield call(axios.put, '/interview', {\n      id: action.payload.id,\n      score: action.payload.newScore,\n    });\n    yield delay(1000);\n    yield put(InterviewActions.changeScoreSuccess());\n    history.push(ApplicationRoutes.INTERVIEWS_LIST);\n  } catch (error) {\n    yield put(InterviewActions.changeScoreError(error));\n  }\n}","import { all } from 'redux-saga/effects'\nimport {candidateSaga} from \"./candidate/candidate.saga\";\nimport {profileSaga} from \"./profile/profile.saga\";\nimport {interviewSaga} from \"./interview/interview.saga\";\n\nexport function* rootSaga() {\n  try {\n    yield all([\n      candidateSaga(),\n      profileSaga(),\n      interviewSaga()\n    ])\n  } catch (e) {\n    console.log('Something wrong happened in the sagas...');\n  }\n}","import Cookies from 'js-cookie'\nimport {Singleton} from \"./singleton\";\n\ninterface SessionObject {\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n@Singleton()\nexport class Session {\n\n  setSession = (token: string) => {\n    Cookies.set('__session', token, {expires: 1});\n  };\n\n  getSession = () => {\n    const jwt = Cookies.get('__session');\n    let session;\n    try {\n      if (jwt) {\n        const base64Url = jwt.split('.')[1];\n        const base64 = base64Url.replace('-', '+').replace('_', '/');\n        session = JSON.parse(window.atob(base64))\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    return session as SessionObject;\n  };\n\n  getToken = () => {\n    return Cookies.get('__session');\n  };\n\n  logOut = () => {\n    Cookies.remove('__session')\n  };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport './styles/index.css';\nimport NavBar from './components/NavBar/NavBar';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore}  from \"redux\";\nimport reducers from './store/reducers';\nimport logger from \"redux-logger\";\nimport history from './core/history';\nimport Routes from './Routes';\nimport { Provider } from \"react-redux\";\nimport { theme } from './styles/material-theme';\nimport createSagaMiddleware from \"redux-saga\";\nimport {rootSaga} from \"./store/sagas\";\nimport {ProfileActions} from \"./store/profile/profile.actions\";\nimport {Session} from \"./core/session\";\nimport axios from 'axios';\n\n// create session\nexport const session = new Session();\n\naxios.defaults.baseURL = 'http://localhost:8080';\nconst token = session.getToken();\nif (token) {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n}\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(reducers, applyMiddleware(sagaMiddleware, logger));\n\n// run the saga\nsagaMiddleware.run(rootSaga);\n\nstore.dispatch(\n  ProfileActions.loginSuccess(session.getSession())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <MuiThemeProvider theme={theme}>\n        <NavBar/>\n        <Routes/>\n      </MuiThemeProvider>\n    </Router>\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export function Singleton() {\n  return (targetConstructor: any) => {\n    const originalConstructor = targetConstructor;\n    function instantiate(constructor: any, ...args: any[]) {\n      if (!originalConstructor.instance) {\n        originalConstructor.instance = new constructor(...args);\n      }\n      return originalConstructor.instance;\n    }\n    const newConstructor = function(...args: any[]) {\n      return instantiate(originalConstructor, ...args);\n    };\n    newConstructor.prototype = originalConstructor.prototype;\n    return newConstructor as any;\n  }\n}"],"sourceRoot":""}